{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mayank\\\\Desktop\\\\GOFOOD\\\\Gofood\\\\src\\\\components\\\\ContextReducer.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useReducer, useContext, createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartStateContext = /*#__PURE__*/createContext();\nconst CartDispatchContext = /*#__PURE__*/createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD\":\n      return [...state, {\n        id: action._id,\n        name: action.name,\n        qty: action.qty,\n        size: action.size,\n        price: action.price,\n        img: action.img\n      }];\n\n    case \"REMOVE\":\n      let newArr = [...state];\n      newArr.splice(action.index, 1);\n      return newArr;\n\n    case \"DROP\":\n      let empArray = [];\n      return empArray;\n\n    case \"UPDATE\":\n      let arr = [...state];\n      arr.find((food, index) => {\n        if (food.id === action.id) {\n          console.log(food.qty, parseInt(action.qty), action.price + food.price);\n          arr[index] = { ...food,\n            qty: parseInt(action.qty) + food.qty,\n            price: action.price + food.price\n          };\n        }\n\n        return arr;\n      });\n      return arr;\n\n    default:\n      console.log(\"Error in Reducer\");\n  }\n};\n\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, []);\n  return /*#__PURE__*/_jsxDEV(CartDispatchContext.Provider, {\n    value: dispatch,\n    children: /*#__PURE__*/_jsxDEV(CartStateContext.Provider, {\n      value: state,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"8pXRrr8ws9JzhvliRQlKIDFcnHU=\");\n\n_c = CartProvider;\nexport const useCart = () => {\n  _s2();\n\n  return useContext(CartStateContext);\n};\n\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport const useDispatchCart = () => {\n  _s3();\n\n  return useContext(CartDispatchContext);\n};\n\n_s3(useDispatchCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/mayank/Desktop/GOFOOD/Gofood/src/components/ContextReducer.js"],"names":["React","useReducer","useContext","createContext","CartStateContext","CartDispatchContext","reducer","state","action","type","id","_id","name","qty","size","price","img","newArr","splice","index","empArray","arr","find","food","console","log","parseInt","CartProvider","children","dispatch","useCart","useDispatchCart"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,UAA5B,EAAwCC,aAAxC,QAA6D,OAA7D;;AAEA,MAAMC,gBAAgB,gBAAGD,aAAa,EAAtC;AACA,MAAME,mBAAmB,gBAAGF,aAAa,EAAzC;;AAEA,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAO,CAAC,GAAGF,KAAJ,EAAW;AAAEG,QAAAA,EAAE,EAAEF,MAAM,CAACG,GAAb;AAAkBC,QAAAA,IAAI,EAAEJ,MAAM,CAACI,IAA/B;AAAqCC,QAAAA,GAAG,EAAEL,MAAM,CAACK,GAAjD;AAAsDC,QAAAA,IAAI,EAAEN,MAAM,CAACM,IAAnE;AAAyEC,QAAAA,KAAK,EAAEP,MAAM,CAACO,KAAvF;AAA8FC,QAAAA,GAAG,EAAER,MAAM,CAACQ;AAA1G,OAAX,CAAP;;AACJ,SAAK,QAAL;AACI,UAAIC,MAAM,GAAG,CAAC,GAAGV,KAAJ,CAAb;AACAU,MAAAA,MAAM,CAACC,MAAP,CAAcV,MAAM,CAACW,KAArB,EAA4B,CAA5B;AACA,aAAOF,MAAP;;AACJ,SAAK,MAAL;AACI,UAAIG,QAAQ,GAAG,EAAf;AACA,aAAOA,QAAP;;AACJ,SAAK,QAAL;AACI,UAAIC,GAAG,GAAG,CAAC,GAAGd,KAAJ,CAAV;AACAc,MAAAA,GAAG,CAACC,IAAJ,CAAS,CAACC,IAAD,EAAOJ,KAAP,KAAiB;AACtB,YAAII,IAAI,CAACb,EAAL,KAAYF,MAAM,CAACE,EAAvB,EAA2B;AACvBc,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACV,GAAjB,EAAsBa,QAAQ,CAAClB,MAAM,CAACK,GAAR,CAA9B,EAA4CL,MAAM,CAACO,KAAP,GAAeQ,IAAI,CAACR,KAAhE;AACAM,UAAAA,GAAG,CAACF,KAAD,CAAH,GAAa,EAAE,GAAGI,IAAL;AAAWV,YAAAA,GAAG,EAAEa,QAAQ,CAAClB,MAAM,CAACK,GAAR,CAAR,GAAuBU,IAAI,CAACV,GAA5C;AAAiDE,YAAAA,KAAK,EAAEP,MAAM,CAACO,KAAP,GAAeQ,IAAI,CAACR;AAA5E,WAAb;AACH;;AACD,eAAOM,GAAP;AACH,OAND;AAOA,aAAOA,GAAP;;AACJ;AACIG,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AArBR;AAuBH,CAxBD;;AA0BA,OAAO,MAAME,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC1C,QAAM,CAACrB,KAAD,EAAQsB,QAAR,IAAoB5B,UAAU,CAACK,OAAD,EAAU,EAAV,CAApC;AAEA,sBACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEuB,QAArC;AAAA,2BACI,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,MAAA,KAAK,EAAEtB,KAAlC;AAAA,gBACKqB;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAVM;;GAAMD,Y;;KAAAA,Y;AAYb,OAAO,MAAMG,OAAO,GAAG;AAAA;;AAAA,SAAM5B,UAAU,CAACE,gBAAD,CAAhB;AAAA,CAAhB;;IAAM0B,O;;AACb,OAAO,MAAMC,eAAe,GAAG;AAAA;;AAAA,SAAM7B,UAAU,CAACG,mBAAD,CAAhB;AAAA,CAAxB;;IAAM0B,e","sourcesContent":["import React, { useReducer, useContext, createContext } from 'react';\r\n\r\nconst CartStateContext = createContext();\r\nconst CartDispatchContext = createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD\":\r\n            return [...state, { id: action._id, name: action.name, qty: action.qty, size: action.size, price: action.price, img: action.img }]\r\n        case \"REMOVE\":\r\n            let newArr = [...state]\r\n            newArr.splice(action.index, 1)\r\n            return newArr;\r\n        case \"DROP\":\r\n            let empArray = []\r\n            return empArray\r\n        case \"UPDATE\":\r\n            let arr = [...state]\r\n            arr.find((food, index) => {\r\n                if (food.id === action.id) {\r\n                    console.log(food.qty, parseInt(action.qty), action.price + food.price)\r\n                    arr[index] = { ...food, qty: parseInt(action.qty) + food.qty, price: action.price + food.price }\r\n                }\r\n                return arr\r\n            })\r\n            return arr\r\n        default:\r\n            console.log(\"Error in Reducer\");\r\n    }\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, []);\r\n\r\n    return (\r\n        <CartDispatchContext.Provider value={dispatch}>\r\n            <CartStateContext.Provider value={state}>\r\n                {children}\r\n            </CartStateContext.Provider>\r\n        </CartDispatchContext.Provider>\r\n    )\r\n};\r\n\r\nexport const useCart = () => useContext(CartStateContext);\r\nexport const useDispatchCart = () => useContext(CartDispatchContext);"]},"metadata":{},"sourceType":"module"}